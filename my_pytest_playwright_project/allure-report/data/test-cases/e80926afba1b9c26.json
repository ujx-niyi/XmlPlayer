{"uid":"e80926afba1b9c26","name":"UJX: Unnamed","fullName":"tests.test_from_xml#test_from_xml","historyId":"7d55960e22785f0fcca0cbc1ba99b0c7","time":{"start":1761086270142,"stop":1761086300148,"duration":30006},"description":"Run test cases dynamically loaded from XML.","descriptionHtml":"<p>Run test cases dynamically loaded from XML.</p>\n","status":"failed","statusMessage":"AssertionError: Step failed: click GET IN TOUCH -\nassert False","statusTrace":"testcase = <Element test at 0x7fe7ddc72e00>, page = <Page url='about:blank'>\n\n    @pytest.mark.usefixtures(\"page\")\n    def test_from_xml(testcase, page):\n        \"\"\"Run test cases dynamically loaded from XML.\"\"\"\n        test_name = testcase.get(\"name\", \"Unnamed\")\n        app_id = testcase.get(\"application\", \"UJX\")\n    \n        allure.dynamic.title(f\"{app_id}: {test_name}\")\n        driver = page or None\n        executor = get_step_executor(app_id, driver, {\"output_dir\": \"data/output\"})\n    \n        steps = testcase.findall(\".//step\")\n        for step in steps:\n            action = step.get(\"action\", \"\")\n            data_to_enter = step.get(\"input\", \"\")\n            verb = step.get(\"verb\", \"\")\n            element = step.get(\"element\", \"\")\n            outcome = step.get(\"outcome\", \"\")\n    \n            step_desc = f\"{action} {element} {data_to_enter}\".strip()\n            with allure.step(step_desc):\n                result = executor.process_step(test_name, action, data_to_enter, verb, element, outcome)\n>               assert result, f\"Step failed: {step_desc}\"\nE               AssertionError: Step failed: click GET IN TOUCH -\nE               assert False\n\ntests/test_from_xml.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761086269907,"stop":1761086269907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1761086269907,"stop":1761086269907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type_launch_args","time":{"start":1761086269908,"stop":1761086269908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1761086269908,"stop":1761086270054,"duration":146},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1761086269908,"stop":1761086269908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1761086269908,"stop":1761086269908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type","time":{"start":1761086270054,"stop":1761086270054,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connect_options","time":{"start":1761086270054,"stop":1761086270054,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1761086270055,"stop":1761086270123,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"launch_browser","time":{"start":1761086270055,"stop":1761086270055,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_pw_artifacts_folder","time":{"start":1761086270123,"stop":1761086270125,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1761086270123,"stop":1761086270123,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_context","time":{"start":1761086270125,"stop":1761086270126,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_artifacts_recorder","time":{"start":1761086270125,"stop":1761086270125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_context_args","time":{"start":1761086270125,"stop":1761086270125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"output_path","time":{"start":1761086270125,"stop":1761086270125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"context","time":{"start":1761086270126,"stop":1761086270129,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1761086270129,"stop":1761086270141,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Run test cases dynamically loaded from XML.","status":"failed","statusMessage":"AssertionError: Step failed: click GET IN TOUCH -\nassert False","statusTrace":"testcase = <Element test at 0x7fe7ddc72e00>, page = <Page url='about:blank'>\n\n    @pytest.mark.usefixtures(\"page\")\n    def test_from_xml(testcase, page):\n        \"\"\"Run test cases dynamically loaded from XML.\"\"\"\n        test_name = testcase.get(\"name\", \"Unnamed\")\n        app_id = testcase.get(\"application\", \"UJX\")\n    \n        allure.dynamic.title(f\"{app_id}: {test_name}\")\n        driver = page or None\n        executor = get_step_executor(app_id, driver, {\"output_dir\": \"data/output\"})\n    \n        steps = testcase.findall(\".//step\")\n        for step in steps:\n            action = step.get(\"action\", \"\")\n            data_to_enter = step.get(\"input\", \"\")\n            verb = step.get(\"verb\", \"\")\n            element = step.get(\"element\", \"\")\n            outcome = step.get(\"outcome\", \"\")\n    \n            step_desc = f\"{action} {element} {data_to_enter}\".strip()\n            with allure.step(step_desc):\n                result = executor.process_step(test_name, action, data_to_enter, verb, element, outcome)\n>               assert result, f\"Step failed: {step_desc}\"\nE               AssertionError: Step failed: click GET IN TOUCH -\nE               assert False\n\ntests/test_from_xml.py:27: AssertionError","steps":[{"name":"click GET IN TOUCH -","time":{"start":1761086270143,"stop":1761086300148,"duration":30005},"status":"failed","statusMessage":"AssertionError: Step failed: click GET IN TOUCH -\nassert False\n","statusTrace":"  File \"/app/tests/test_from_xml.py\", line 27, in test_from_xml\n    assert result, f\"Step failed: {step_desc}\"\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4b847abeee548686","name":"log","source":"4b847abeee548686.txt","type":"text/plain","size":1484}],"parameters":[],"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"new_context::0","time":{"start":1761086300166,"stop":1761086300172,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_artifacts_recorder::0","time":{"start":1761086300179,"stop":1761086300179,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_pw_artifacts_folder::0","time":{"start":1761086300196,"stop":1761086300196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser::0","time":{"start":1761086300205,"stop":1761086300218,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1761086300241,"stop":1761086300244,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_from_xml"},{"name":"host","value":"0839681633b3"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_from_xml"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"},{"name":"testcase","value":"<Element test at 0x7fe7ddc72e00>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e80926afba1b9c26.json","parameterValues":["'chromium'","<Element test at 0x7fe7ddc72e00>"]}